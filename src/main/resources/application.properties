# Server Port
server.port = 443

spring.data.rest.base-path=/api

# Connection url for the database "netgloo_blog"
spring.datasource.url = jdbc:mysql://localhost:3306/db-p2p?useSSL=false

# Username and password
spring.datasource.username = p2p-admin
spring.datasource.password = ip5-fhnw-2016

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = false

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
#*******************
#* !!!IMPORTANT!!! * Remove property for the production deployment (no automated changes in productive environment)
#*******************
spring.jpa.hibernate.ddl-auto = create

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

# ===============================
# = JSON 
# ===============================
spring.jackson.serialization.fail-on-empty-beans=false
